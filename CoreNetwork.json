{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "minLEngth": 1,
      "maxLength": 6,
      "metadata": {
        "description": "The prefix to add to each resource name."
      }
    },
    "primaryLocation": {
      "type": "string",
      "allowedValues": [
        "northeurope",
        "westeurope"
      ],
      "metadata": {
        "description": "The primary location for resources."
      }
    },
    "secondaryLocation": {
      "type": "string",
      "allowedValues": [
        "northeurope",
        "westeurope"
      ],
      "metadata": {
        "description": "The secondary location for resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The administrative username to use for virtual machines."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "The administrative password to use for virtual machines."
      }
    }
  },
  "variables": {
    // Storage
    "primaryVhdStorageName": "[concat(parameters('namePrefix'), 'vhdpri')]",
    "secondaryVhdStorageName": "[concat(parameters('namePrefix'), 'vhdsec')]",
    "vhdStorageType": "Standard_LRS",
    "primaryDiagStorageName": "[concat(parameters('namePrefix'), 'diagpri')]",
    "secondaryDiagStorageName": "[concat(parameters('namePrefix'), 'diagsec')]",
    "diagStorageType": "Standard_LRS",
    // Vnets
    "primaryVnetName": "[concat(parameters('namePrefix'), 'vnetpri')]",
    "secondaryVnetName": "[concat(parameters('namePrefix'), 'vnetsec')]",
    "primaryVnetAddress": "10.0.0.0/16",
    "primaryVnetGatewaySubnet": "10.0.0.0/24",
    "primaryVnetNvaSubnet": "10.0.1.0/24",
    "secondaryVnetAddress": "10.1.0.0/16",
    "secondaryVnetGatewaySubnet": "10.1.0.0/24",
    "secondaryVnetNvaSubnet": "10.1.1.0/24",
    // Gateways
    "primaryGatewayPublicIpName": "[concat(parameters('namePrefix'), 'gwippri')]",
    "secondaryGatewayPublicIpName": "[concat(parameters('namePrefix'), 'gwipsec')]",
    "primaryGatewayName": "[concat(parameters('namePrefix'), 'gwpri')]",
    "secondaryGatewayName": "[concat(parameters('namePrefix'), 'gwsec')]",
    "gatewaySku": "Standard",
    // NICs
    "primaryNvaVmNicName": "[concat(parameters('namePrefix'), 'nvanicpri')]",
    "secondaryNvaVmNicName": "[concat(parameters('namePrefix'), 'nvanicsec')]",
    "primaryJumpVmNicName": "[concat(parameters('namePrefix'), 'jumpnicpri')]",
    "secondaryJumpVmNicName": "[concat(parameters('namePrefix'), 'jumpnicsec')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('primaryVhdStorageName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('primaryLocation')]",
      "tags": {
        "displayName": "Primary VHD Storage Account"
      },
      "sku": {
        "name": "[variables('vhdStorageType')]"
      },
      "kind": "Storage",
      "properties": {
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('secondaryVhdStorageName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('secondaryLocation')]",
      "tags": {
        "displayName": "Secondary VHD Storage Account"
      },
      "sku": {
        "name": "[variables('vhdStorageType')]"
      },
      "kind": "Storage",
      "properties": {
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('primaryDiagStorageName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('primaryLocation')]",
      "tags": {
        "displayName": "Primary Diagnostics Storage Account"
      },
      "sku": {
        "name": "[variables('diagStorageType')]"
      },
      "kind": "Storage",
      "properties": {
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('secondaryDiagStorageName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('secondaryLocation')]",
      "tags": {
        "displayName": "Secondary Diagnostics Storage Account"
      },
      "sku": {
        "name": "[variables('diagStorageType')]"
      },
      "kind": "Storage",
      "properties": {
      }
    },
    {
      "name": "[variables('primaryVnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('primaryLocation')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "Primary Vnet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('primaryVnetAddress')]"
          ]
        },
        "subnets": [
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('primaryVnetGatewaySubnet')]"
            }
          },
          {
            "name": "NvaSubnet",
            "properties": {
              "addressPrefix": "[variables('primaryVnetNvaSubnet')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('secondaryVnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('secondaryLocation')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "Secondary Vnet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('secondaryVnetAddress')]"
          ]
        },
        "subnets": [
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('secondaryVnetGatewaySubnet')]"
            }
          },
          {
            "name": "NvaSubnet",
            "properties": {
              "addressPrefix": "[variables('secondaryVnetNvaSubnet')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('primaryGatewayPublicIpName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('primaryLocation')]",
      "apiVersion": "2016-03-30",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "name": "[variables('secondaryGatewayPublicIpName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('secondaryLocation')]",
      "apiVersion": "2016-03-30",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "name": "[variables('primaryGatewayName')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "location": "[parameters('primaryLocation')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('primaryGatewayPublicIpName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('primaryVnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('primaryVnetName')), '/subnets/GatewaySubnet')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('primaryGatewayPublicIpName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "sku": {
          "name": "[variables('gatewaySku')]",
          "tier": "[variables('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": "false"
      }
    },
    {
      "name": "[variables('secondaryGatewayName')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "location": "[parameters('secondaryLocation')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('secondaryGatewayPublicIpName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('secondaryVnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('secondaryVnetName')), '/subnets/GatewaySubnet')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('secondaryGatewayPublicIpName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "sku": {
          "name": "[variables('gatewaySku')]",
          "tier": "[variables('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": "false"
      }
    },
    {
      "name": "[variables('primaryNvaVmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('primaryLocation')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('primaryVnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('primaryNvaVmNicName'), 'ipconfig')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('primaryVnetName')), '/subnets/NvaSubnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('secondaryNvaVmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('secondaryLocation')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('secondaryVnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('secondaryNvaVmNicName'), 'ipconfig')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('secondaryVnetName')), '/subnets/NvaSubnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('primaryJumpVmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('primaryLocation')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('primaryVnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('primaryJumpVmNicName'), 'ipconfig')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('primaryVnetName')), '/subnets/NvaSubnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('secondaryJumpVmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('secondaryLocation')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('secondaryVnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('secondaryJumpVmNicName'), 'ipconfig')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('secondaryVnetName')), '/subnets/NvaSubnet')]"
              }
            }
          }
        ]
      }
    }
  ]
}